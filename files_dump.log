flashproxy-infra\flash-gateway-mvp\docker-compose.yaml:
version: "3.9"

services:
  # ────────── Proxy stack ──────────
  haproxy:
    image: haproxytech/haproxy-alpine:2.9
    container_name: haproxy
    network_mode: host
    restart: unless-stopped
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - /var/log:/var/log            # rsyslog writes here

  socks:
    image: tarampampam/3proxy:1.12.0  # ← public, actively maintained
    container_name: socks5
    network_mode: host
    restart: unless-stopped
    volumes:
      - /var/log:/var/log

  # ────────── Observability stack ──────────
  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    network_mode: host
    restart: unless-stopped
    volumes:
      - loki_data:/loki
      - ./loki-config.yaml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    network_mode: host
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
      - ./promtail.yaml:/etc/promtail.yaml:ro
    command: -config.file=/etc/promtail.yaml

  grafana:
    image: grafana/grafana-enterprise:10.4.2
    container_name: grafana
    network_mode: host
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: changeme   # ← change in production
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  loki_data:
  grafana_data:

flashproxy-infra\flash-gateway-mvp\haproxy.cfg:
###############################################################################
# Global
###############################################################################
global
    log stdout format raw local0
    nbthread 2               # use a concrete value
    maxconn 200000

###############################################################################
# Defaults
###############################################################################
defaults
    mode tcp
    timeout client  4m
    timeout server  4m
    option  dontlognull

###############################################################################
# Demo user (replace or manage via Runtime API)
###############################################################################
userlist customers
    user demo insecure-password password

###############################################################################
# Front-end :443 (HTTPS / CONNECT) and :1080 (SOCKS5 via 3proxy)
###############################################################################
frontend edge_in
    bind :443
    bind :1080
    mode tcp

    # Basic auth for HTTP CONNECT
    tcp-request inspect-delay 5s
    acl good_auth http_auth(customers)
    http-request auth realm FlashProxy if !good_auth

    # Per-IP bandwidth cap (1 Gbps ≈ 125 MB/s)
    stick-table type ip size 1m expire 1s store bytes_out_rate(1s)
    tcp-request content track-sc0 src
    acl over_quota  sc0_bytes_out_rate gt 125000000
    tcp-request content reject if over_quota

    default_backend superproxy

###############################################################################
# Back-end – Bright Data super-proxy
###############################################################################
backend superproxy
    mode tcp
    # Bright Data accepts creds in the TCP connect string
    server brd1 \
      brd-customer-hl_19cb0fe8-zone-al4-country-US-session-12345678:035knx33dmn2@brd.superproxy.io:22225

flashproxy-infra\flash-gateway-mvp\loki-config.yaml:
auth_enabled: false

server:
  http_listen_port: 3100
  log_level: info

common:
  storage:
    filesystem:
      directory: /loki          # ← single authoritative key
  replication_factor: 1
  ring:
    kvstore:
      store: inmemory

schema_config:
  configs:
    - from: 2023-01-01
      store: boltdb-shipper
      object_store: filesystem
      schema: v11
      index:
        prefix: index_
        period: 24h

flashproxy-infra\flash-gateway-mvp\promtail.yaml:
# ───── Promtail (self-host, shipping to local Loki) ─────
server:
  http_listen_port: 0            # disable Promtail web UI

positions:
  filename: /var/log/positions.yaml

clients:
  - url: http://localhost:3100/loki/api/v1/push   # <─ local Loki

scrape_configs:
  - job_name: flash-edge
    static_configs:
      - targets: ['localhost']
        labels:
          job: flash-edge
          __path__: /var/log/*proxy*.log          # haproxy.log, 3proxy.log

flashproxy-infra\ovhcloud\live\dev\edge\cloud-init.yaml:
#cloud-config
package_update: true
packages: [docker.io, curl, tar]

write_files:
  ########################################################
  # Promtail config — scraped by docker‑compose service
  ########################################################
  - path: /opt/src/promtail.yaml
    permissions: '0644'
    content: |
      server:
        http_listen_port: 0
      positions:
        filename: /var/log/positions.yaml
      clients:
        - url: http://localhost:3100/loki/api/v1/push
      scrape_configs:
        - job_name: flash-edge
          static_configs:
            - targets: ['localhost']
              labels:
                job: flash-edge
                __path__: /var/log/*proxy*.log

runcmd:
  - systemctl enable --now docker

  # ─── Fetch and extract fp‑prod release v0.11 ──────────────────────
  - mkdir -p /opt/src
  - curl -L https://github.com/thealonlevi/fp-prod/archive/refs/tags/0.11.tar.gz -o /opt/src/fp-prod-0.11.tar.gz
  - tar -xzf /opt/src/fp-prod-0.11.tar.gz --strip-components=1 -C /opt/src

  # ─── Start the edge stack (HAProxy, 3proxy, Loki, Grafana, Promtail) ───
  - docker compose -f /opt/src/flashproxy-infra/flash-gateway-mvp/docker-compose.yml up -d

final_message: "🚀 FlashProxy edge ready: HAProxy & observability stack running."

