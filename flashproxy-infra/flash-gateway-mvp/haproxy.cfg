###############################################################################
# FlashProxy – Edge Gateway (HAProxy 2.9)
#   • External auth via SPOE  →  sdk.opsec-development.com:9000
#   • Per-IP 1 Gb/s bandwidth guard
#   • Bright Data super-proxy backend
###############################################################################

############################### GLOBAL ########################################
global
    log stdout format raw local0
    master-worker                 # seamless reloads
    nbthread 2
    maxconn 200000

############################### DEFAULTS ######################################
defaults
    mode            http
    timeout connect 5s
    timeout client  4m
    timeout server  4m
    option          dontlognull

############################### SPOE FILTER ###################################
# Config file for the SPOE engine lives at /etc/haproxy/spoe-auth.cfg
###############################################################################

############################### FRONTEND :443 #################################
frontend edge_in
    bind :443                                   # add “ssl crt …” once you’re ready
    mode http

    # ── per-IP bandwidth cap (1 Gb/s) ─────────────────────────────────────────
    stick-table type ip size 1m expire 1s store bytes_out_rate(1s)
    tcp-request  session track-sc0 src
    acl          over_quota sc0_bytes_out_rate gt 125000000
    tcp-request  content reject if over_quota

    # ── 407 if Proxy-Authorization header is missing ─────────────────────────
    acl  missing_auth req.hdr(Proxy-Authorization) -m len 0
    http-request return status 407 hdr Proxy-Authenticate "Basic realm=\"FlashProxy\"" if missing_auth

    # ── extract Basic user:pass for SPOE message ────────────────────────────
    http-request set-var(req.b64)      req.hdr(Proxy-Authorization),field(1,:)
    http-request set-var(req.username) var(req.b64),base64,field(1,:)
    http-request set-var(req.password) var(req.b64),base64,field(2,:)

    # ── call auth-engine over SPOE ───────────────────────────────────────────
    filter spoe engine auth-engine config /etc/haproxy/spoe-auth.cfg

    # SPOE agent sets txn.auth.auth_ok → 1 on success
    acl  authenticated var(txn.auth.auth_ok) -m int 1
    http-request return status 407 hdr Proxy-Authenticate "Basic realm=\"FlashProxy\"" if !authenticated

    # ── copy client header to normal Authorization (optional) ───────────────
    http-request set-header Authorization %[req.hdr(Proxy-Authorization)]

    # ── inject Bright Data credentials ───────────────────────────────────────
    http-request set-header Proxy-Authorization "Basic YnJkLWN1c3RvbWVyLWhsXzE5Y2IwZmU4LXpvbmUtYWw0LWNvdW50cnktVVMtc2Vzc2lvbi0xMjM0NTY3ODowMzVrbngzM2RtbjI="

    default_backend superproxy

############################### BACKEND #######################################
backend superproxy
    mode http
    # for TLS to BD: brd.superproxy.io:443 ssl verify none
    server brd1 brd.superproxy.io:22225

    # ── strip BD trace headers before client sees them ──────────────────────
    http-response del-header X-Luminati-IP
    http-response del-header X-Luminati-Timeline
    http-response del-header X-Luminati-Tun-Timeline
    http-response del-header X-Luminati-P2P-Timeline
    http-response del-header X-BRD-IP
    http-response del-header X-BRD-Timeline
    http-response del-header X-BRD-Tun-Timeline
    http-response del-header X-BRD-P2P-Timeline
